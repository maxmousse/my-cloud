version: '3'

services:
  db:
    image: postgres:13-alpine
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "10"

  cache:
    image: redis:6-alpine
    command: --appendonly yes
    ports:
      - "6379"
    volumes:
      - cache-data:/data
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "10"

  app:
    image: nextcloud:20-fpm-alpine
    restart: always
    volumes:
      - app-data:/var/www/html
    environment:
      - REDIS_HOST=cache
      - POSTGRES_HOST=db
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "10"
    depends_on:
      - db
      - cache

  web:
    image: nginx:1-alpine
    restart: always
    volumes:
      - ./config/web/nginx.conf:/etc/nginx/nginx.conf
      - app-data:/var/www/html:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.web.rule=HOST(`${NEXTCLOUD_DOMAIN}`)
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "10"
    depends_on:
      - app
      - proxy

  proxy:
    image: traefik:2.4
    restart: always
    ports:
      - 8080:8080
      - 80:80
    volumes:
      - ./config/proxy/traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "10"

volumes:
  db-data:
  app-data:
  cache-data:
